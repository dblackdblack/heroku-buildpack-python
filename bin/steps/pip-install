# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

# if we have an SSL client cert passed in the env var $DEVPI_CLIENT_CERT
# then dump to disk so that `pip install` can use it when contacting the devpi
# server
if [[ "$DEVPI_CLIENT_CERT" != "" ]] ; then
    echo -n "$DEVPI_CLIENT_CERT" > /devpi-client-cert.pem
fi

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

if [[ -f /devpi-client-cert.pem ]] ; then
    /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external --client-cert=/devpi-client-cert.pem | cleanup | indent
else
    /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external  | cleanup | indent
fi


# Smart Requirements handling
cp requirements.txt .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo